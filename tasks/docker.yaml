---
# tasks/docker.yaml
- name: Update the apt package index
  ansible.builtin.apt:
    update_cache: yes

- name: Install packages to allow apt to use a repository over HTTPS
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

- name: Add Dockerâ€™s official GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Set up the stable repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Update the apt package index again
  ansible.builtin.apt:
    update_cache: yes

- name: Install Docker CE
  ansible.builtin.apt:
    name: docker-ce
    state: present

- name: Ensure Docker service is running
  ansible.builtin.service:
    name: docker
    state: started
    enabled: yes

- name: Install Docker Compose plugin (docker-compose-plugin) from Docker repository
  ansible.builtin.apt:
    name: docker-compose-plugin
    state: present

- name: Create docker-compose compatibility wrapper (/usr/local/bin/docker-compose)
  ansible.builtin.copy:
    dest: /usr/local/bin/docker-compose
    content: |
      #!/bin/sh
      # Compatibility wrapper to call the docker compose plugin
      exec docker compose "$@"
    mode: '0755'
  when: "ansible_facts['os_family'] == 'Debian' or ansible_facts['os_family'] == 'Ubuntu'"

- name: Ensure "docker" group exists
  ansible.builtin.group:
    name: docker
    state: present

- name: Add invoking user to docker group 
  ansible.builtin.user:
    name: "{{ lookup('env','SUDO_USER') }}"
    groups: docker
    append: yes
    state: present
